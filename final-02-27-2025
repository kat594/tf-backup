terraform {
  required_providers {
    azurerm = {
      source = "hashicorp/azurerm"
      version = "4.10.0"
    }
  }
}

provider "azurerm" {
  features {}
  subscription_id = "18bf6d23-f170-4215-be50-32d8ce4d7736" # Uncomment and update as needed
}

# Reference the existing Resource Group
data "azurerm_resource_group" "tfe_rg" {
  name = "rg_npe_ast_dev_westus2_tfe2"
}

# Reference the existing Storage Account
data "azurerm_storage_account" "tfe_sa" {
  name                = "tfedevsaa"
  resource_group_name = data.azurerm_resource_group.tfe_rg.name
}

# Reference the existing Storage Container
data "azurerm_storage_container" "tfe_container" {
  name                 = "tfe-dev-sc"
  storage_account_name = data.azurerm_storage_account.tfe_sa.name
}

# Reference the existing PostgreSQL Flexible Server
data "azurerm_postgresql_flexible_server" "tfe_postgresql_fs" {
  name                = "tfe-dev-po"
  resource_group_name = data.azurerm_resource_group.tfe_rg.name
}

# Backup Vault for TFE
resource "azurerm_data_protection_backup_vault" "tfe_backup_savault" {
  name                = "tfe-backup-vault-sstorage"
  resource_group_name = data.azurerm_resource_group.tfe_rg.name
  location            = data.azurerm_resource_group.tfe_rg.location
  datastore_type      = "VaultStore"
  redundancy          = "LocallyRedundant"
  identity {
    type = "SystemAssigned"
  }
}

# Role Assignment for Backup Vault Access to Storage Account
resource "azurerm_role_assignment" "tfe_sa_backup_contributor" {
  scope                = data.azurerm_storage_account.tfe_sa.id
  role_definition_name = "Storage Account Backup Contributor"
  principal_id         = azurerm_data_protection_backup_vault.tfe_backup_savault.identity[0].principal_id
}

# Backup Policy for Blob Storage
resource "azurerm_data_protection_backup_policy_blob_storage" "tfe_blob_backup_policy" {
  name               = "tfe-backup-policy"
  vault_id           = azurerm_data_protection_backup_vault.tfe_backup_savault.id
  operational_default_retention_duration = "P30D"
}

# Backup Instance for Blob Storage
resource "azurerm_data_protection_backup_instance_blob_storage" "tfe_blob_backup_instance" {
  name               = "tfe-backup-instance"
  vault_id           = azurerm_data_protection_backup_vault.tfe_backup_savault.id
  location           = data.azurerm_resource_group.tfe_rg.location
  storage_account_id = data.azurerm_storage_account.tfe_sa.id
  backup_policy_id   = azurerm_data_protection_backup_policy_blob_storage.tfe_blob_backup_policy.id

  depends_on = [azurerm_role_assignment.tfe_sa_backup_contributor]
}

# Backup Vault for PostgreSQL Flexible Server
resource "azurerm_data_protection_backup_vault" "tfe_postgresql_backup_vault" {
  name                = "tfe-postgresql-backup-vvault"
  resource_group_name = data.azurerm_resource_group.tfe_rg.name
  location            = data.azurerm_resource_group.tfe_rg.location
  datastore_type      = "VaultStore"
  redundancy          = "LocallyRedundant"
  soft_delete         = "Off"

  identity {
    type = "SystemAssigned"
  }
}

# Role Assignment for Backup Vault Access to PostgreSQL Server
resource "azurerm_role_assignment" "tfe_postgresql_backup_role" {
  scope                = data.azurerm_postgresql_flexible_server.tfe_postgresql_fs.id
  role_definition_name = "PostgreSQL Flexible Server Long Term Retention Backup Role"
  principal_id         = azurerm_data_protection_backup_vault.tfe_postgresql_backup_vault.identity[0].principal_id
}

# Data Protection Backup Policy for PostgreSQL Flexible Server
resource "azurerm_data_protection_backup_policy_postgresql_flexible_server" "tfe_postgresql_backup_policy" {
  name                            = "tfe-postgresql-backup-policy"
  vault_id                        = azurerm_data_protection_backup_vault.tfe_postgresql_backup_vault.id
  backup_repeating_time_intervals = ["R/2021-05-23T02:30:00+00:00/P1W"]

  default_retention_rule {
    life_cycle {
      duration        = "P4M"
      data_store_type = "VaultStore"
    }
  }

  depends_on = [
    azurerm_role_assignment.tfe_postgresql_backup_role
  ]
}

# Backup Instance for PostgreSQL Flexible Server
resource "azurerm_data_protection_backup_instance_postgresql_flexible_server" "tfe_postgresql_backup_instance" {
  name             = "tfe-postgresql-backup-instance"
  location         = data.azurerm_resource_group.tfe_rg.location
  vault_id         = azurerm_data_protection_backup_vault.tfe_postgresql_backup_vault.id
  server_id        = data.azurerm_postgresql_flexible_server.tfe_postgresql_fs.id
  backup_policy_id = azurerm_data_protection_backup_policy_postgresql_flexible_server.tfe_postgresql_backup_policy.id

  depends_on = [azurerm_role_assignment.tfe_postgresql_backup_role]
}
